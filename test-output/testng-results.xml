<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Parallel" duration-ms="62117" started-at="2017-10-09T20:31:22Z" finished-at="2017-10-09T20:32:24Z">
    <groups>
    </groups>
    <test name="HappyPath" duration-ms="42311" started-at="2017-10-09T20:31:22Z" finished-at="2017-10-09T20:32:05Z">
      <class name="com.zopa.Tests.SignUpFlow">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.zopa.Tests.SignUpFlow@5622fdf]" name="beforeMethod" is-config="true" duration-ms="14125" started-at="2017-10-09T14:31:22Z" finished-at="2017-10-09T14:31:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SignUpFlow()[pri:0, instance:com.zopa.Tests.SignUpFlow@5622fdf]" name="SignUpFlow" duration-ms="27727" started-at="2017-10-09T14:31:36Z" finished-at="2017-10-09T14:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpFlow -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.zopa.Tests.SignUpFlow@5622fdf]" name="tearDown" is-config="true" duration-ms="445" started-at="2017-10-09T14:32:04Z" finished-at="2017-10-09T14:32:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUpFlow status=SUCCESS method=SignUpFlow.SignUpFlow()[pri:0, instance:com.zopa.Tests.SignUpFlow@5622fdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zopa.Tests.SignUpFlow -->
    </test> <!-- HappyPath -->
    <test name="unhappyPath" duration-ms="62117" started-at="2017-10-09T20:31:22Z" finished-at="2017-10-09T20:32:24Z">
      <class name="com.zopa.Tests.SignUp_SadPath">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="beforeMethod" is-config="true" duration-ms="14136" started-at="2017-10-09T14:31:22Z" finished-at="2017-10-09T14:31:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="PhoneNumberValidation()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="PhoneNumberValidation" duration-ms="11152" started-at="2017-10-09T14:31:36Z" finished-at="2017-10-09T14:31:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.zopa.Tests.SignUp_SadPath.PhoneNumberValidation(SignUp_SadPath.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PhoneNumberValidation -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="tearDown" is-config="true" duration-ms="1831" started-at="2017-10-09T14:31:48Z" finished-at="2017-10-09T14:31:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PhoneNumberValidation status=FAILURE method=SignUp_SadPath.PhoneNumberValidation()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="beforeMethod" is-config="true" duration-ms="11106" started-at="2017-10-09T14:31:49Z" finished-at="2017-10-09T14:32:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="PostCodeValidation()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="PostCodeValidation" duration-ms="6313" started-at="2017-10-09T14:32:00Z" finished-at="2017-10-09T14:32:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCodeValidation -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="tearDown" is-config="true" duration-ms="210" started-at="2017-10-09T14:32:07Z" finished-at="2017-10-09T14:32:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PostCodeValidation status=SUCCESS method=SignUp_SadPath.PostCodeValidation()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="beforeMethod" is-config="true" duration-ms="8117" started-at="2017-10-09T14:32:07Z" finished-at="2017-10-09T14:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="emailVerification()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="emailVerification" duration-ms="9037" started-at="2017-10-09T14:32:15Z" finished-at="2017-10-09T14:32:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailVerification -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008]" name="tearDown" is-config="true" duration-ms="193" started-at="2017-10-09T14:32:24Z" finished-at="2017-10-09T14:32:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emailVerification status=SUCCESS method=SignUp_SadPath.emailVerification()[pri:0, instance:com.zopa.Tests.SignUp_SadPath@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zopa.Tests.SignUp_SadPath -->
    </test> <!-- unhappyPath -->
  </suite> <!-- Parallel -->
</testng-results>
